<html>
<head>
    <title>MindLess</title>
    <style>
        /* Hide the sections initially */
        #ownerSection, #customerSection, #tableSection {
            display: none;
        }
        button {
            font-size: 16px;
            margin: 5px;
            padding: 10px;
        }
        /* Buttons and search bar container */
        .buttons-container {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
        }
        /* Buttons section styling */
        .buttons {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }
        /* Search bar styling */
        .search-container {
            margin-bottom: 10px;
            width: 100%;
        }
        .search-input {
            font-size: 16px;
            padding: 10px;
            width: 100%;
            box-sizing: border-box;
        }
        /* Table Styling */
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        table, th, td {
            border: 1px solid black;
        }
        th, td {
            padding: 10px;
            text-align: center;
        }
        th {
            background-color: #f2f2f2;
        }
    </style>
    <script>
        // Custom button names and colors for Owner and Customer sections
        const ownerButtonNames = [
            'Owner Button A', 'Owner Button B', 'Owner Button C', 'Owner Button D', 'Owner Button E',
            'Owner Button F', 'Owner Button G', 'Owner Button H', 'Owner Button I', 'Owner Button J',
            'Owner Button K', 'Owner Button L', 'Owner Button M', 'Owner Button N', 'Owner Button O',
            'Owner Button P', 'Owner Button Q', 'Owner Button R', 'Owner Button S', 'Owner Button T'
        ];

        const customerButtonNames = [
            'Customer Button A', 'Customer Button B', 'Customer Button C', 'Customer Button D', 'Customer Button E',
            'Customer Button F', 'Customer Button G', 'Customer Button H', 'Customer Button I', 'Customer Button J',
            'Customer Button K', 'Customer Button L', 'Customer Button M', 'Customer Button N', 'Customer Button O',
            'Customer Button P', 'Customer Button Q', 'Customer Button R', 'Customer Button S', 'Customer Button T'
        ];

        // Custom colors for Owner and Customer buttons
        const ownerButtonColors = [
            '#FF5733', '#33FF57', '#3357FF', '#FF33A1', '#33FFF9',
            '#F9FF33', '#FF6F33', '#33D4FF', '#A633FF', '#FF33E4',
            '#33FFAA', '#FF8F33', '#6B33FF', '#FFA633', '#33FFC9',
            '#FF3380', '#33FFBF', '#BFF333', '#FF9633', '#33FF9E'
        ];

        const customerButtonColors = [
            '#FFB433', '#33C4FF', '#FF5733', '#3380FF', '#FF3333',
            '#33FF83', '#9E33FF', '#33FFCC', '#FF333D', '#8FFF33',
            '#FF5C33', '#33FF70', '#FF338F', '#33B3FF', '#FF33C2',
            '#33FF61', '#FF8033', '#33FFFA', '#FF33BB', '#33EFFF'
        ];

        // Custom column names and colors for the table
        const columnNames = ['Column 1', 'Column 2', 'Column 3', 'Column 4', 'Column 5', 'Column 6'];
        const columnColors = ['#FF9999', '#99FF99', '#9999FF', '#FFFF99', '#FFCC99', '#CC99FF'];
        const rowColors = ['#FFD700', '#ADFF2F', '#FF6347', '#4682B4', '#7B68EE', '#DDA0DD', '#FF4500', '#32CD32', '#1E90FF', '#FFD700'];

        // Function to show the Owner section after password verification
        function showOwnerSection() {
            const password = prompt("Please enter the password for Owner access:");
            if (password === "owner123") {
                document.getElementById('mainSection').style.display = 'none'; // Hide the main section
                document.getElementById('ownerSection').style.display = 'block'; // Show the owner section
                loadButtons('ownerButtons', ownerButtonNames, ownerButtonColors);
            } else {
                alert("Incorrect password. Access denied.");
            }
        }

        // Function to show the Customer section
        function showCustomerSection() {
            document.getElementById('mainSection').style.display = 'none'; // Hide the main section
            document.getElementById('customerSection').style.display = 'block'; // Show the customer section
            loadButtons('customerButtons', customerButtonNames, customerButtonColors);
        }

        // Function to load 20 buttons dynamically based on the provided names and colors
        function loadButtons(containerId, buttonNames, buttonColors) {
            const container = document.getElementById(containerId);
            container.innerHTML = ''; // Clear previous buttons

            // Create buttons using the provided names and colors
            buttonNames.forEach((name, index) => {
                const button = document.createElement('button');
                button.innerHTML = name;
                button.style.backgroundColor = buttonColors[index];  // Set the button color
                button.classList.add('dynamic-button');  // Add class for filtering
                button.onclick = function() {
                    showTableSection(name);  // Call to show the table section
                };
                container.appendChild(button);
            });
        }

        // Function to show the table section and create the table
        function showTableSection(buttonName) {
            document.getElementById('ownerSection').style.display = 'none'; // Hide Owner section
            document.getElementById('customerSection').style.display = 'none'; // Hide Customer section
            document.getElementById('tableSection').style.display = 'block'; // Show table section

            createTable(buttonName);  // Create the table based on the button clicked
        }

        // Function to create a table with 10 rows and 6 columns based on the button clicked
        function createTable(buttonName) {
            const tableContainer = document.getElementById('dynamicTable');
            tableContainer.innerHTML = ''; // Clear any existing table

            const table = document.createElement('table');
            const tableHeader = document.createElement('thead');
            const tableBody = document.createElement('tbody');

            // Create table header with custom column names
            const headerRow = document.createElement('tr');
            columnNames.forEach((colName, index) => {
                const th = document.createElement('th');
                th.textContent = colName;
                th.style.backgroundColor = columnColors[index]; // Set column color
                headerRow.appendChild(th);
            });
            tableHeader.appendChild(headerRow);

            // Create table body with 10 rows and dynamic row names
            for (let i = 1; i <= 10; i++) {
                const row = document.createElement('tr');
                for (let j = 1; j <= 6; j++) {
                    const td = document.createElement('td');
                    td.textContent = `${buttonName} Row ${i} Col ${j}`;
                    td.style.backgroundColor = rowColors[i - 1]; // Set row color
                    row.appendChild(td);
                }
                tableBody.appendChild(row);
            }

            table.appendChild(tableHeader);
            table.appendChild(tableBody);
            tableContainer.appendChild(table); // Append the table to the container
        }

        // Function to go back to the previous section
        function goBack() {
            document.getElementById('tableSection').style.display = 'none'; // Hide table section
            document.getElementById('mainSection').style.display = 'block'; // Show main section
            document.getElementById('ownerSection').style.display = 'none'; // Hide Owner section
            document.getElementById('customerSection').style.display = 'none'; // Hide Customer section
        }
    </script>
</head>
<body>
    <!-- Main Section -->
    <div id="mainSection">
        <h1 style="font-size: 80px; color: blue;">Navadurga Kiranam</h1>
        <button onclick="showOwnerSection()" style="background-color: rgb(37, 234, 37);">To Owner</button>
        <button onclick="showCustomerSection()" style="background-color: rgb(37, 234, 37);">To Customer</button>
    </div>

    <!-- Owner Section -->
    <div id="ownerSection">
        <h1>Owner Section</h1>
        <div class="buttons-container">
            <!-- Search Bar for Owner Section -->
            <div class="search-container">
                <input id="ownerSearch" type="text" class="search-input" placeholder="Search Owner Buttons" onkeyup="searchButtons('ownerButtons', 'ownerSearch')">
            </div>

            <!-- Owner Buttons -->
            <div id="ownerButtons" class="buttons"></div>
        </div>
        <br>
        <button onclick="goBack()" style="background-color: rgb(234, 37, 37);">Go Back</button>
    </div>

    <!-- Customer Section -->
    <div id="customerSection">
        <h1>Customer Section</h1>
        <div class="buttons-container">
            <!-- Search Bar for Customer Section -->
            <div class="search-container">
                <input id="customerSearch" type="text" class="search-input" placeholder="Search Customer Buttons" onkeyup="searchButtons('customerButtons', 'customerSearch')">
            </div>

            <!-- Customer Buttons -->
            <div id="customerButtons" class="buttons"></div>
        </div>
        <br>
        <button onclick="goBack()" style="background-color: rgb(234, 37, 37);">Go Back</button>
    </div>

    <!-- Table Section -->
    <div id="tableSection">
        <h1>Dynamic Table</h1>
        <div id="dynamicTable"></div>
        <button onclick="goBack()" style="background-color: rgb(234, 37, 37);">Go Back</button>
    </div>
</body>
</html>
